{
  "primaryKey": [
    "service_date",
    "trip_id_performed",
    "trip_stop_sequence"
  ],
  "missingValues": [
    "NA",
    "NaN",
    ""
  ],
  "fields": [
    {
      "name": "service_date",
      "type": "date",
      "description": "Service date. References GTFS indirectly via calendars.txt and calendar_dates.txt",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "trip_id_performed",
      "type": "string",
      "title": "ID referencing trips_performed.trip_id_performed",
      "description": "Identifies the trip performed",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "trip_stop_sequence",
      "type": "integer",
      "description": "The actual order of stops visited within a performed trip. The values must start at 1 and must be consecutive along the trip.<br/> Example: A bus departs the first stop and detours around the second and third scheduled stops, visiting one unscheduled stop and resuming regular service at the 4th scheduled stop. The `scheduled_stop_sequence` is [1, null, 4], and the `trip_stop_sequence` is [1, 2, 3].",
      "constraints": {
        "required": true,
        "minimum": 1
      }
    },
    {
      "name": "scheduled_stop_sequence",
      "type": "integer",
      "title": "positive integer referencing GTFS stop_times.stop_sequence",
      "description": "Scheduled order of stops for a particular trip. The values must increase along the trip but do not need to be consecutive. References GTFS",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "pattern_id",
      "type": "string",
      "title": "unique identifier for the route-pattern",
      "description": "Identifies the unique stop-path for a trip, may be distinct from GTFS shapes.shape_id"
    },
    {
      "name": "vehicle_id",
      "type": "string",
      "title": "ID referencing vehicles.vehicle_id",
      "description": "Identifies the vehicle."
    },
    {
      "name": "dwell",
      "type": "integer",
      "description": "Indicates the amount of time a vehicle spent stopped at a stop in seconds.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "stop_id",
      "type": "string",
      "title": "ID referencing GTFS stops.stop_id",
      "description": "Identifies the stop. References GTFS"
    },
    {
      "name": "timepoint",
      "type": "boolean",
      "description": "Indicates if the stop should be used for evaluating schedule adherence, on-time performance, and other KPIs. This could be populated to match the GTFS “timepoint” field."
    },
    {
      "name": "schedule_arrival_time",
      "type": "datetime",
      "description": "Scheduled timestamp at which the vehicle arrives at a stop. References GTFS"
    },
    {
      "name": "schedule_departure_time",
      "type": "datetime",
      "description": "Scheduled timestamp at which the vehicle departs from a stop. References GTFS"
    },
    {
      "name": "actual_arrival_time",
      "type": "datetime",
      "description": "Timestamp at which the vehicle arrives at a stop."
    },
    {
      "name": "actual_departure_time",
      "type": "datetime",
      "description": "Timestamp at which the vehicle departs from a stop."
    },
    {
      "name": "distance",
      "type": "integer",
      "description": "Observed distance in meters from the previous stop traveled by the vehicle.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "boarding_1",
      "type": "integer",
      "description": "Number of riders who entered through the vehicle's front doors (in vehicles with doors opening on only one side, or when passengers primarily board through the front, as is typical with buses) or the vehicle's right doors (in vehicles with doors on both sides, or when passengers board through all doors, as is typical with trains).",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "alighting_1",
      "type": "integer",
      "description": "Number of riders who exited through the vehicle's front doors (in vehicles with doors opening on only one side, or when passengers primarily board through the front, as is typical with buses) or the vehicle's right doors (in vehicles with doors on both sides, or when passengers board through all doors, as is typical with trains).",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "boarding_2",
      "type": "integer",
      "description": "Number of riders who entered through other doors, such as a bus's rear door when boarding_1 captures the front door, or a train's left doors when boarding_1 captures right doors.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "alighting_2",
      "type": "integer",
      "description": "Number of riders who exited through other doors, such as a bus's rear door when alighting_1 captures the front door, or a train's left doors when alighting_1 captures right doors.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "departure_load",
      "type": "integer",
      "description": "Number of riders on the vehicle when departing the stop.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "door_open",
      "type": "datetime",
      "description": "Timestamp at which the doors opened."
    },
    {
      "name": "door_close",
      "type": "datetime",
      "description": "Timestamp at which the doors closed."
    },
    {
      "name": "door_status",
      "type": "string",
      "description": "Indicates actions of the doors during the stop visit.",
      "constraints": {
        "enum": [
          "Doors did not open",
          "Front door opened and back doors remain closed",
          "Back doors opened and front door remained closed",
          "All doors opened",
          "Other configuration"
        ]
      }
    },
    {
      "name": "ramp_deployed_time",
      "type": "number",
      "description": "Duration of time a ramp is deployed, in seconds.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "ramp_failure",
      "type": "boolean",
      "description": "Indicates if the ramp deployment failed at a stop."
    },
    {
      "name": "kneel_deployed_time",
      "type": "number",
      "description": "Duration of time a kneel is deployed in seconds.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "lift_deployed_time",
      "type": "number",
      "description": "Duration of time in seconds of time a lift is deployed.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "bike_rack_deployed",
      "type": "boolean",
      "description": "Indicates if the bike rack was deployed at a stop."
    },
    {
      "name": "bike_load",
      "type": "integer",
      "description": "Number of bikes on the vehicle when departing the stop.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "revenue",
      "type": "number",
      "description": "Amount of revenue collected at the stop."
    },
    {
      "name": "number_of_transactions",
      "type": "integer",
      "description": "Number of fare transactions that occurred at a stop.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "schedule_relationship",
      "type": "string",
      "description": "Indicates the status of stop’s service on the trip.(Note: schedule_arrival_time and schedule_departure_time may differ from GTFS in the case of a schedule modification). References GTFS-realtime TripUpdate",
      "constraints": {
        "enum": [
          "Scheduled",
          "Skipped",
          "Missing data",
          "Unscheduled",
          "Canceled",
          "Duplicated",
          "Schedule modified"
        ]
      }
    }
  ],
  "foreignReferences": [
    {
      "fields": "trip_id_performed",
      "reference": {
        "resource": "trips_performed",
        "fields": "trip_id_performed"
      }
    },
    {
      "fields": "scheduled_stop_sequence",
      "reference": {
        "resource": "stop_times",
        "fields": "stop_sequence"
      }
    },
    {
      "fields": "vehicle_id",
      "reference": {
        "resource": "vehicles",
        "fields": "vehicle_id"
      }
    }
  ],
  "name": "stop_visits.schema.json",
  "description": "Summarized boarding, alighting, arrival, departure, and other events (kneel engaged, ramp deployed, etc.) by trip and stop for each service date.",
  "_table_type": "Summary"
}
