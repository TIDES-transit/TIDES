{
  "primaryKey": "transaction_id",
  "missingValues": [
    "NA",
    "NaN",
    ""
  ],
  "fields": [
    {
      "name": "transaction_id",
      "type": "string",
      "description": "Identifies the fare transaction.",
      "constraints": {
        "required": true,
        "unique": true
      }
    },
    {
      "name": "service_date",
      "type": "date",
      "description": "Service date. References GTFS",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "event_timestamp",
      "type": "datetime",
      "description": "Recorded event timestamp, including for transactions that may be aggregated values associated with a trip or vehicle.",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "amount",
      "type": "number",
      "description": "Value of the transaction.",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "currency_type",
      "type": "string",
      "rdfType": "https://schema.org/currency",
      "description": "Currency used for the transaction. References GTFS"
    },
    {
      "name": "fare_action",
      "type": "string",
      "description": "Indicates the type of action performed.<br>Unknown action type: the action type is unknown or missing<br>Purchase: purchase a new card, ticket, pass, or other fare product<br>Enter: enter a fare-controlled area or vehicle<br>Exit: exit a fare-controlled area or vehicle<br>Transfer entrance: enter a fare-controlled area or vehicle at no charge due to network or fare policy rules, such as a desginated free transfer at two nearby fare-controlled stations<br>Transfer exit: exit a fare-controlled area or vehicle at no charge due to network or fare policy rules, such as a desginated free transfer at two nearby fare-controlled stations<br>Add: add stored value or stored rides to an existing fare instrument<br>New: obtain a new fare instrument<br>Capture: the device confiscated or retained the fare instrument<br>Extend: extend a fare product's temporal validity<br>Combine: combine two or more fare instruments or products into one<br>Void: void, cancel, negate, or undo a previous fare transaction<br>Activate: make a fare product active for travel<br>Adjust: credit or debit a fare instrument to balance an earlier transaction<Br>Other: other action not included in this enumeration",
      "constraints": {
        "required": true,
        "enum": [
          "Unknown action type",
          "Purchase",
          "Enter",
          "Exit",
          "Transfer entrance",
          "Transfer exit",
          "Add",
          "New",
          "Capture",
          "Extend",
          "Combine",
          "Void",
          "Activate",
          "Adjust",
          "Other"
        ]
      }
    },
    {
      "name": "trip_id_performed",
      "type": "string",
      "title": "ID referencing trips_performed.trip_id_performed",
      "description": "Identifies the trip performed. May be null if the fare collection device is NOT located on a vehicle. May be null if on a vehicle but trip-level data is unavailable, in which case the data would be associated with the vehicle."
    },
    {
      "name": "trip_id_scheduled",
      "type": "string",
      "title": "ID referencing trips_performed.trip_id_scheduled",
      "description": "Identifies the scheduled trip. May be null if the fare collection device is NOT located on a vehicle. May be null if on a vehicle but schedule data is unavailable, in which case the data would be associated with the vehicle."
    },
    {
      "name": "pattern_id",
      "type": "string",
      "title": "unique identifier for the route-pattern",
      "description": "Identifies the unique stop-path for a trip, may be distinct from GTFS shapes.shape_id"
    },
    {
      "name": "trip_stop_sequence",
      "type": "integer",
      "title": "Positive integer referencing stop_visits.trip_stop_sequence",
      "description": "The actual order of stops visited within a performed trip. The values must start at 1 and must be consecutive along the trip.<br/> Example: A bus departs the first stop and detours around the second and third scheduled stops, visiting one unscheduled stop and resuming regular service at the 4th scheduled stop. The `scheduled_stop_sequence` is [1, null, 4], and the `trip_stop_sequence` is [1, 2, 3].",
      "constraints": {
        "minimum":1
      }
    },
    {
      "name": "scheduled_stop_sequence",
      "type": "integer",
      "title": "positive integer referencing GTFS stop_times.stop_sequence",
      "description": "Scheduled order of stops for a particular trip. The values must increase along the trip but do not need to be consecutive. References GTFS",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "vehicle_id",
      "type": "string",
      "title": "ID referencing vehicles.vehicle_id",
      "description": "Identifies the vehicle. May be null if collection device is NOT located on a vehicle. May be null if on a vehicle but vehicle data is unavailable, in which case the data would be associated with a trip and/or stop."
    },
    {
      "name": "device_id",
      "type": "string",
      "title": "ID referencing devices.device_id",
      "description": "Identifies the ITS device on which the fare transaction was performed. May be null if only a single device is reporting fare transactions on a vehicle and vehicle_id is provided. May be null if only a single device is reporting fare transactions at a stop and stop_id is provided."
    },
    {
      "name": "fare_id",
      "type": "string",
      "title": "ID referencing GTFS fare_attributes.fare_id",
      "description": "Identifies a fare class, as included in the GTFS Fare_attributes file. References GTFS"
    },
    {
      "name": "stop_id",
      "type": "string",
      "title": "ID referencing GTFS stops.stop_id",
      "description": "Identifies the stop. References GTFS"
    },
    {
      "name": "num_riders",
      "type": "integer",
      "description": "The number of riders included in the transaction.",
      "constraints": {
        "minimum": 0
      }
    },
    {
      "name": "fare_media_id",
      "type": "string",
      "description": "Indicates the fare medium that was used for the transaction.",
      "constraints": {
        "enum": [
          "Cash or coins",
          "Smart card or ticket",
          "Magnetic-stripe card or ticket",
          "Bank card",
          "Mobile NFC",
          "Optical scan",
          "Button pressed by driver or operator to indicate a boarding or alighting passenger.",
          "Other type"
        ]
      }
    },
    {
      "name": "rider_category",
      "type": "string",
      "description": "Indicates rider category (categories defined by transit agency). For example:\nAdult\nYouth\nStudent\nSenior\nOther reduced"
    },
    {
      "name": "fare_product",
      "type": "string",
      "description": "Indicates the fare group (fare groups defined by transit agency). For example:\nSingle ride\nPass\nEmployer sponsored\nOther pass"
    },
    {
      "name": "fare_period",
      "type": "string",
      "description": "Indicates the fare period (fare periods defined by transit agency). For example:\nAll day\nPeak\nOff-peak\nSummer\nOther"
    },
    {
      "name": "fare_capped",
      "type": "boolean",
      "description": "Indicates if the fare charged in this transaction was modified by a fare capping policy.",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "token_id",
      "type": "string",
      "description": "Identifies the individual fare instrument used for the transaction. For example, the fare card ID."
    },
    {
      "name": "balance",
      "type": "number",
      "description": "Stored value remaining on an account after the transaction is made."
    }
  ],
  "foreignReferences": [
    {
      "fields": "trip_id_performed",
      "reference": {
        "resource": "trips_performed",
        "fields": "trip_id_performed"
      }
    },
    {
      "fields": ["service_date", "trip_id_performed", "scheduled_stop_sequence"],
      "reference": {
        "resource": "stop_times",
        "fields": ["service_date", "trip_id_performed", "stop_sequence"]
      }
    },
    {
      "fields": "vehicle_id",
      "reference": {
        "resource": "vehicles",
        "fields": "vehicle_id"
      }
    },
    {
      "fields": "device_id",
      "reference": {
        "resource": "devices",
        "fields": "device_id"
      }
    },
    {
      "fields": "fare_id",
      "reference": {
        "resource": "fare_attributes",
        "fields": "fare_id"
      }
    },
    {
      "fields": "stop_id",
      "reference": {
        "resource": "stops",
        "fields": "stop_id"
      }
    }
  ],
  "name": "fare_transactions.schema.json",
  "description": "Timestamped fare transaction, associated with devices.",
  "_table_type": "Event"
}
