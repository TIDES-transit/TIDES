{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "TIDES Data Package",
    "description": "TIDES Data Package is a simple specification for data access and delivery of tabular TIDES transit data.",
    "type": "object",
    "required": [
      "profile",
      "resources",
      "title"
    ],
    "properties": {
      "profile": {
        "enum": [
          "tides-data-package"
        ],
        "propertyOrder": 10,
        "title": "Profile",
        "description": "The profile of this descriptor.",
        "context": "Every Package and Resource descriptor has a profile. The default profile, if none is declared, is `data-package` for Package and `data-resource` for Resource.",
        "type": "string",
        "examples": [
          "{\n  \"profile\": \"tides-data-package\"\n}\n",
          "{\n  \"profile\": \"http://example.com/my-profiles-json-schema.json\"\n}\n"
        ]
      },
      "title": {
        "propertyOrder": 20,
        "title": "Title",
        "description": "A human-readable title.",
        "type": "string",
        "examples": [
          "{\n  \"title\": \"My Package Title\"\n}\n"
        ]
      },
      "name": {
        "propertyOrder": 30,
        "title": "Name",
        "description": "Short sluggable (https://en.wikipedia.org/wiki/Clean_URL#Slug) identifier string.",
        "type": "string",
        "pattern": "^([-a-z0-9._/])+$",
        "context": "This is ideally a url-usable and human-readable name. Name `SHOULD` be invariant, meaning it `SHOULD NOT` change when its parent descriptor is updated.",
        "examples": [
          "{\n  \"name\": \"tides-data-package\"\n}\n"
        ]
      },
      "description": {
        "propertyOrder": 40,
        "format": "textarea",
        "title": "Description",
        "description": "Short description of TIDES data package.",
        "type": "string",
        "examples": [
          "{\n  \"description\": \"# My Package description\\nAll about my package.\"\n}\n"
        ]
      },
      "agency": {
        "propertyOrder": 50,
        "format": "textarea",
        "title": "Agency",
        "description": "Transit agency name.",
        "type": "string",
        "examples": [
          "{\n  \"agency\": \"Coos County Area Transit\"\n}\n"
        ]
      },
      "ntd_id": {
        "propertyOrder": 60,
        "title": "NTD ID",
        "description": "ID for the National Transit Database.",
        "type": "string",
        "pattern": "^([-a-z0-9._/])+$",
        "context": "Background on NTD available at https://www.transit.dot.gov/ntd",
        "examples": [
          "{\n  \"ntd_id\": \"0R02-00307\"\n}\n"
        ]
      },
      "contributors": {
        "propertyOrder": 70,
        "title": "Contributors",
        "description": "Array of data contributors `[{\"title\": \"My Name\", \"github\": \"my_handl\", \"email\": \"me@myself.com\"}]`",
        "type": "array",
        "minItems": 1,
        "items": {
          "title": "Contributor",
          "description": "A contributor to this descriptor.",
          "properties": {
            "name": {
              "title": "Name",
              "description": "A human-readable name.",
              "type": "string",
              "examples": [
                "{\n  \"title\": \"Frank Julian Sprague\"\n}\n"
              ]
            },
            "email": {
              "title": "Email",
              "description": "An email address.",
              "type": "string",
              "format": "email",
              "examples": [
                "{\n  \"email\": \"example@example.com\"\n}\n"
              ]
            },
            "organization": {
              "title": "Organization",
              "description": "An organizational affiliation for this contributor.",
              "type": "string"
            },
            "role": {
              "title": "Role",
              "description": "The contributor's role in the project",
              "type": "string",
              "default": "contributor"
            }
          },
          "required": [
            "title"
          ],
          "context": "Use of this property does not imply that the person was the original creator of, or a contributor to, the data in the descriptor, but refers to the composition of the descriptor itself."
        },
        "examples": [
          "{\n  \"contributors\": [\n    {\n      \"name\": \"Joe Bloggs\"\n    }\n  ]\n}\n",
          "{\n  \"contributors\": [\n    {\n      \"name\": \"Miriam Coates\",\n      \"email\": \"joe@example.com\",\n      \"role\": \"author\"\n    }\n  ]\n}\n"
        ]
      },
      "maintainers": {
        "propertyOrder": 80,
        "title": "Maintainers",
        "description": "Array of data maintainers `[{\"title\": \"My Name\", \"github\": \"my_handl\", \"email\": \"me@myself.com\"}]`",
        "type": "array",
        "minItems": 1,
        "items": {
          "title": "Maintainer",
          "description": "A maintainer of this descriptor.",
          "properties": {
            "name": {
              "title": "Name",
              "description": "A human-readable name.",
              "type": "string",
              "examples": [
                "{\n  \"name\": \"George Francis Train\"\n}\n"
              ]
            },
            "email": {
              "title": "Email",
              "description": "An email address.",
              "type": "string",
              "format": "email",
              "examples": [
                "{\n  \"email\": \"example@example.com\"\n}\n"
              ]
            },
            "organization": {
              "title": "Organization",
              "description": "An organizational affiliation for this maintainer.",
              "type": "string"
            },
            "role": {
              "title": "Role",
              "description": "The maintainer's role in the project",
              "type": "string",
              "default": "maintainer"
            }
          },
          "required": [
            "title"
          ],
          "context": "Use of this property does not imply that the person was the original creator of, or a contributor to, the data in the descriptor, but refers to the composition of the descriptor itself."
        },
        "examples": [
          "{\n  \"maintainers\": [\n    {\n      \"name\": \"Joe Bloggs\"\n    }\n  ]\n}\n",
          "{\n  \"maintainers\": [\n    {\n      \"name\": \"Miriam Coates\",\n      \"email\": \"joe@example.com\",\n      \"role\": \"author\"\n    }\n  ]\n}\n"
        ]
      },
      "licenses": {
        "propertyOrder": 90,
        "title": "Licenses",
        "description": "The license(s) under which this package is published.",
        "type": "array",
        "minItems": 1,
        "items": {
          "title": "License",
          "description": "A license for this descriptor.",
          "type": "object",
          "anyOf": [
            {
              "required": [
                "name"
              ]
            },
            {
              "required": [
                "path"
              ]
            }
          ],
          "properties": {
            "name": {
              "title": "Open Definition license identifier",
              "description": "MUST be an Open Definition license identifier, see http://licenses.opendefinition.org/",
              "type": "string",
              "pattern": "^([-a-zA-Z0-9._])+$"
            },
            "path": {
              "title": "Path",
              "description": "A fully qualified public URL, or a Unix-style relative file path.",
              "type": "string",
              "pattern": "^(?=^[^./~])(^((?!\\.{2}).)*$).*$",
              "examples": [
                "{\n  \"path\": \"/license.md\"\n}\n",
                "{\n  \"path\": \"https://opensource.org/license/gpl-2-0/\"\n}\n"
              ],
              "context": "Implementations need to negotiate the type of path provided, and dereference the data accordingly."
            },
            "title": {
              "title": "Title",
              "description": "A human-readable title.",
              "type": "string",
              "examples": [
                "{\n  \"title\": \"My Package Title\"\n}\n"
              ]
            }
          }
        },
        "context": "This property is not legally binding and does not guarantee that the package is licensed under the terms defined herein.",
        "examples": [
          "{\n  \"licenses\": [\n    {\n      \"name\": \"odc-pddl-1.0\",\n      \"path\": \"http://opendatacommons.org/licenses/pddl/\",\n      \"title\": \"Open Data Commons Public Domain Dedication and License v1.0\"\n    }\n  ]\n}\n"
        ]
      },
      "resources": {
        "propertyOrder": 100,
        "title": "Tabular Data Resources",
        "description": "Array of data files included in your package, formated as a tabular-data-resource",
        "type": "array",
        "minItems": 1,
        "items": {
          "title": "Tabular Data Resource",
          "description": "A Tabular Data Resource.",
          "type": "object",
          "required": [
              "name",
              "path",
              "schema"
          ],
          "properties": {
            "profile": {
              "enum": [
                "tabular-data-resource"
              ],
              "propertyOrder": 10,
              "title": "Profile",
              "description": "Should be `tides-data-package`",
              "context": "Every Package and Resource descriptor has a profile. The default profile, if none is declared, is `data-package` for Package and `data-resource` for Resource.",
              "type": "string",
              "examples": [
                "{\n  \"profile\": \"tides-data-package\"\n}\n",
                "{\n  \"profile\": \"http://example.com/my-profiles-json-schema.json\"\n}\n"
              ]
            },
            "name": {
              "propertyOrder": 20,
              "title": "Name",
              "description": "An identifier string. Lower case characters with `.`, `_`, `-` and `/` are allowed.",
              "type": "string",
              "pattern": "^([-a-z0-9._/])+$",
              "context": "This is ideally a url-usable and human-readable name. Name `SHOULD` be invariant, meaning it `SHOULD NOT` change when its parent descriptor is updated.",
              "examples": [
                "{\n  \"name\": \"tabular-data-resource\"\n}\n"
              ]
            },
            "path": {
              "propertyOrder": 30,
              "title": "Path",
              "description": "A reference to the data for this resource, as a valid URI string.",
              "type": "string",
              "pattern": "^(?=^[^./~])(^((?!\\.{2}).)*$).*$",
              "examples": [
                "{\n  \"path\": \"file.csv\"\n}\n",
                "{\n  \"path\": \"http://example.com/file.csv\"\n}\n"
              ],
              "context": "Implementations need to negotiate the type of path provided, and dereference the data accordingly."
            },
            "schema": {
              "propertyOrder": 40,
              "title": "Table Schema",
              "description": "A Table Schema for this resource, compliant with one of the [TIDES](/) table specifications.",
              "type": "string",
              "required": [
                "name",
                "path"
              ],
              "properties": {
                "name": {
                  "propertyOrder": 10,
                  "title": "Name",
                  "description": "An identifier string corresponding to the name of one of the table specs in the TIDES data package",
                  "type": "string",
                  "pattern": "^([-a-z0-9._/])+$",
                  "examples": [
                    "{\n  \"name\": \"fare_transactions\"\n}\n",
                    "{\n  \"name\": \"train_cars\"\n}\n"
                  ]
                },
                "path": {
                  "propertyOrder": 20,
                  "title": "Path",
                  "description": "A fully qualified public URL, or a relative Unix-style file path, leading to a place where the relevant table spec is defined.",
                  "type": "string",
                  "pattern": "^(?=^[^./~])(^((?!\\.{2}).)*$).*$",
                  "examples": [
                    "{\n  \"path\": \"/fare_transactions.schema.json\"\n}\n",
                    "{\n  \"path\": \"https://github.com/TIDES-transit/TIDES/blob/main/spec/train_cars.schema.json\"\n}\n"
                  ]
                }
              },
              "examples": [
                "{\n  \"schema\": {\n    \"fields\": [\n      {\n        \"name\": \"first_name\",\n        \"type\": \"string\"\n        \"constraints\": {\n          \"required\": true\n        }\n      },\n      {\n        \"name\": \"age\",\n        \"type\": \"integer\"\n      },\n    ],\n    \"primaryKey\": [\n      \"name\"\n    ]\n  }\n}\n"
              ]
            },
            "title": {
              "title": "Title",
              "description": "A human-readable title.",
              "type": "string",
              "examples": [
                "{\n  \"title\": \"My Package Title\"\n}\n"
              ],
              "propertyOrder": 50
            },
            "description": {
              "title": "Description",
              "description": "A text description. Markdown is encouraged.",
              "type": "string",
              "examples": [
                "{\n  \"description\": \"# My Package description\\nAll about my package.\"\n}\n"
              ],
              "propertyOrder": 60,
              "format": "textarea"
            },
            "homepage": {
              "propertyOrder": 70,
              "title": "Home Page",
              "description": "The home on the web that is related to this data package.",
              "type": "string",
              "format": "uri",
              "examples": [
                "{\n  \"homepage\": \"http://example.com/\"\n}\n"
              ]
            },
            "sources": {
              "propertyOrder": 140,
              "options": {
                "hidden": true
              },
              "title": "Sources",
              "description": "The raw sources for this resource.",
              "type": "array",
              "minItems": 0,
              "items": {
                "title": "Source",
                "description": "A source file.",
                "type": "object",
                "required": [
                  "title"
                ],
                "properties": {
                  "title": {
                    "title": "Title",
                    "description": "Description of the data source.",
                    "type": "string",
                    "examples": [
                      "{\n  \"title\": \"My Package Title\"\n}\n"
                    ]
                  },
                  "component": {
                    "title": "Component",
                    "description": "What technology component was used to generate this data (directly or indirectly)? Examples include `AVL`, `APC`, `AFC`, etc.",
                    "type": "string"
                  },
                  "product": {
                    "title": "Product",
                    "description": "What product was used to generate this data (directly or indirectly)?",
                    "type": "string"
                  },
                  "product_version": {
                    "title": "Product Version",
                    "description": "Describe the version of the product was used.",
                    "type": "string"
                  },
                  "vendor": {
                    "title": "Vendor",
                    "description": "What company makes this product?",
                    "type": "string"
                  }
                }
              }
            },
            "licenses": {
              "description": "Should be `[{\"name\": \"Apache-2.0\"}]` to be consistent with this repository",
              "propertyOrder": 150,
              "options": {
                "hidden": true
              },
              "title": "Licenses",
              "type": "array",
              "minItems": 1,
              "items": {
                "title": "License",
                "description": "A license for this descriptor.",
                "type": "object",
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "path"
                    ]
                  }
                ],
                "properties": {
                  "name": {
                    "title": "Open Definition license identifier",
                    "description": "MUST be an Open Definition license identifier, see http://licenses.opendefinition.org/",
                    "type": "string",
                    "pattern": "^([-a-zA-Z0-9._])+$"
                  },
                  "path": {
                    "title": "Path",
                    "description": "A fully qualified public URL, or a relative Unix-style file path.",
                    "type": "string",
                    "pattern": "^(?=^[^./~])(^((?!\\.{2}).)*$).*$",
                    "examples": [
                      "{\n  \"path\": \"/license.md\"\n}\n",
                      "{\n  \"path\": \"https://opensource.org/license/apache-2-0/\"\n}\n"
                    ],
                    "context": "Implementations need to negotiate the type of path provided, and dereference the data accordingly."
                  },
                  "title": {
                    "title": "Title",
                    "description": "A human-readable title.",
                    "type": "string",
                    "examples": [
                      "{\n  \"title\": \"My Package Title\"\n}\n"
                    ]
                  }
                }
              },
              "context": "This property is not legally binding and does not guarantee that the package is licensed under the terms defined herein.",
              "examples": [
                "{\n  \"licenses\": [\n    {\n      \"name\": \"odc-pddl-1.0\",\n      \"path\": \"http://opendatacommons.org/licenses/pddl/\",\n      \"title\": \"Open Data Commons Public Domain Dedication and License v1.0\"\n    }\n  ]\n}\n"
              ]
            },
            "dialect": {
              "propertyOrder": 50,
              "title": "CSV Dialect",
              "description": "The CSV dialect descriptor.",
              "type": [
                "string",
                "object"
              ],
              "required": [
                "delimiter",
                "doubleQuote"
              ],
              "properties": {
                "csvddfVersion": {
                  "title": "CSV Dialect schema version",
                  "description": "A number to indicate the schema version of CSV Dialect. Version 1.0 was named CSV Dialect Description Format and used different field names.",
                  "type": "number",
                  "default": 1.2,
                  "examples:": [
                    "{\n  \"csvddfVersion\": \"1.2\"\n}\n"
                  ]
                },
                "delimiter": {
                  "title": "Delimiter",
                  "description": "A character sequence to use as the field separator.",
                  "type": "string",
                  "default": ",",
                  "examples": [
                    "{\n  \"delimiter\": \",\"\n}\n",
                    "{\n  \"delimiter\": \";\"\n}\n"
                  ]
                },
                "doubleQuote": {
                  "title": "Double Quote",
                  "description": "Specifies the handling of quotes inside fields.",
                  "context": "If Double Quote is set to true, two consecutive quotes must be interpreted as one.",
                  "type": "boolean",
                  "default": true,
                  "examples": [
                    "{\n  \"doubleQuote\": true\n}\n"
                  ]
                },
                "lineTerminator": {
                  "title": "Line Terminator",
                  "description": "Specifies the character sequence that must be used to terminate rows.",
                  "type": "string",
                  "default": "\r\n",
                  "examples": [
                    "{\n  \"lineTerminator\": \"\\r\\n\"\n}\n",
                    "{\n  \"lineTerminator\": \"\\n\"\n}\n"
                  ]
                },
                "nullSequence": {
                  "title": "Null Sequence",
                  "description": "Specifies the null sequence, for example, `\\N`.",
                  "type": "string",
                  "examples": [
                    "{\n  \"nullSequence\": \"\\N\"\n}\n"
                  ]
                },
                "quoteChar": {
                  "title": "Quote Character",
                  "description": "Specifies a one-character string to use as the quoting character.",
                  "type": "string",
                  "default": "\"",
                  "examples": [
                    "{\n  \"quoteChar\": \"'\"\n}\n"
                  ]
                },
                "escapeChar": {
                  "title": "Escape Character",
                  "description": "Specifies a one-character string to use as the escape character.",
                  "type": "string",
                  "examples": [
                    "{\n  \"escapeChar\": \"\\\\\"\n}\n"
                  ]
                },
                "skipInitialSpace": {
                  "title": "Skip Initial Space",
                  "description": "Specifies the interpretation of whitespace immediately following a delimiter. If false, whitespace immediately after a delimiter should be treated as part of the subsequent field.",
                  "type": "boolean",
                  "default": false,
                  "examples": [
                    "{\n  \"skipInitialSpace\": true\n}\n"
                  ]
                },
                "header": {
                  "title": "Header",
                  "description": "Specifies if the file includes a header row, always as the first row in the file.",
                  "type": "boolean",
                  "default": true,
                  "examples": [
                    "{\n  \"header\": true\n}\n"
                  ]
                },
                "commentChar": {
                  "title": "Comment Character",
                  "description": "Specifies that any row beginning with this one-character string, without preceeding whitespace, causes the entire line to be ignored.",
                  "type": "string",
                  "examples": [
                    "{\n  \"commentChar\": \"#\"\n}\n"
                  ]
                },
                "caseSensitiveHeader": {
                  "title": "Case Sensitive Header",
                  "description": "Specifies if the case of headers is meaningful.",
                  "context": "Use of case in source CSV files is not always an intentional decision. For example, should \"CAT\" and \"Cat\" be considered to have the same meaning.",
                  "type": "boolean",
                  "default": false,
                  "examples": [
                    "{\n  \"caseSensitiveHeader\": true\n}\n"
                  ]
                }
              },
              "examples": [
                "{\n  \"dialect\": {\n    \"delimiter\": \";\"\n  }\n}\n",
                "{\n  \"dialect\": {\n    \"delimiter\": \"\\t\",\n    \"quoteChar\": \"'\",\n    \"commentChar\": \"#\"\n  }\n}\n"
              ]
            },
            "format": {
              "propertyOrder": 80,
              "title": "Format",
              "description": "The file format of this resource.",
              "context": "`csv`, `xls`, `json` are examples of common formats.",
              "type": "string",
              "examples": [
                "{\n  \"format\": \"xls\"\n}\n"
              ]
            },
            "mediatype": {
              "propertyOrder": 90,
              "title": "Media Type",
              "description": "The media type of this resource. Can be any valid media type listed with [IANA](https://www.iana.org/assignments/media-types/media-types.xhtml).",
              "type": "string",
              "pattern": "^(.+)/(.+)$",
              "examples": [
                "{\n  \"mediatype\": \"text/csv\"\n}\n"
              ]
            },
            "encoding": {
              "propertyOrder": 100,
              "title": "Encoding",
              "description": "The file encoding of this resource.",
              "type": "string",
              "default": "utf-8",
              "examples": [
                "{\n  \"encoding\": \"utf-8\"\n}\n"
              ]
            },
            "bytes": {
              "propertyOrder": 110,
              "options": {
                "hidden": true
              },
              "title": "Bytes",
              "description": "The size of this resource in bytes.",
              "type": "integer",
              "examples": [
                "{\n  \"bytes\": 2082\n}\n"
              ]
            },
            "hash": {
              "propertyOrder": 120,
              "options": {
                "hidden": true
              },
              "title": "Hash",
              "type": "string",
              "description": "The MD5 hash of this resource. Indicate other hashing algorithms with the {algorithm}:{hash} format.",
              "pattern": "^([^:]+:[a-fA-F0-9]+|[a-fA-F0-9]{32}|)$",
              "examples": [
                "{\n  \"hash\": \"d25c9c77f588f5dc32059d2da1136c02\"\n}\n",
                "{\n  \"hash\": \"SHA256:5262f12512590031bbcc9a430452bfd75c2791ad6771320bb4b5728bfb78c4d0\"\n}\n"
              ]
            }
          }
        },
        "examples": [
          "{\n  \"resources\": [\n    {\n      \"name\": \"my-data\",\n      \"data\": [\n        \"data.csv\"\n      ],\n      \"schema\": \"tableschema.json\",\n      \"mediatype\": \"text/csv\"\n    }\n  ]\n}\n"
        ]
      },
      "sources": {
        "propertyOrder": 110,
        "options": {
          "hidden": true
        },
        "title": "Sources",
        "description": "Array of data sources formatted as a source. Recommended to be documented either here at the top-level or for each individual resource",
        "type": "array",
        "minItems": 0,
        "items": {
          "title": "Source",
          "description": "A source file.",
          "type": "object",
          "required": [
            "title"
          ],
          "properties": {
            "title": {
              "title": "Title",
              "description": "A human-readable title.",
              "type": "string",
              "examples": [
                "{\n  \"title\": \"My Package Title\"\n}\n"
              ]
            },
            "path": {
              "title": "Path",
              "description": "A fully qualified URL, or a POSIX file path.",
              "type": "string",
              "pattern": "^(?=^[^./~])(^((?!\\.{2}).)*$).*$",
              "examples": [
                "{\n  \"path\": \"file.csv\"\n}\n",
                "{\n  \"path\": \"http://example.com/file.csv\"\n}\n"
              ],
              "context": "Implementations need to negotiate the type of path provided, and dereference the data accordingly."
            },
            "email": {
              "title": "Email",
              "description": "An email address.",
              "type": "string",
              "format": "email",
              "examples": [
                "{\n  \"email\": \"example@example.com\"\n}\n"
              ]
            }
          }
        },
        "examples": [
          "{\n  \"sources\": [\n    {\n      \"title\": \"World Bank and OECD\",\n      \"path\": \"http://data.worldbank.org/indicator/NY.GDP.MKTP.CD\"\n    }\n  ]\n}\n"
        ]
      }
    }
  }
