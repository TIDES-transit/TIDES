name: Validate-Samples

on:
  push:
    paths:
      - 'samples/*/TIDES/*'
      # - 'spec/*' (TODO: Reinstate once samples folder exists)
  pull_request:
    paths:
      - 'samples/*/TIDES/*'
      # - 'spec/*' (TODO: Reinstate once samples folder exists)
  workflow_dispatch:
  create:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install Frictionless
        run: pip install frictionless[excel,json]>=5.0.0
      - name: Find Sample Folders
        id: sample_folders
        run: |
          pwd
          samples=$(find ./samples -type d -name 'TIDES')
          echo $samples
          echo "samples=${samples}" >> $GITHUB_OUTPUT
      - name: Validate Sample Data
        id: validation
        run: |
          samples=(${{ steps.sample_folders.outputs.samples }})
          results="{\"values\": ["
          result=""
          for sample in "${samples[@]}"; do
            results+="$result"
            result=$(frictionless validate --schema-sync "${sample}/datapackage.json" --json) || true
            result="${result//\'s/}"
            result="${result//\\\"/\\\\\"}"
            result="$result,"
          done

          result="${result%?}"
          results+="$result"
          results+="]}"

          echo "RESULTS<<EOF" >> $GITHUB_OUTPUT
          echo ${results} >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log("Begin sample construction")
            const samples = '${{ steps.sample_folders.outputs.samples }}'.split('\n');
            const results = JSON.parse('${{ steps.validation.outputs.results }}');
            let comment = `**Data Validation Report**\n\n`;
            comment += '| Sample | Status |\n';
            comment += '| ------ | ------ |\n';
            console.log("Constructed header")
            for (let i = 0; i < samples.length; i++) {
              console.log(samples[i])
              console.log(results[i])
              const sample = samples[i];
              const result = results.values[i];
              let status = '';
              if (result.valid) {
                status = ':heavy_check_mark:';
              } else if (result.stats.errorCount > 0) {
                status = ':x:';
              } else {
                status = ':warning:';
              }
              comment += `| ${sample} | ${status} |\n`;
            }
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
