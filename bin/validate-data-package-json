#!/usr/bin/env bash

# Script to validate a local JSON file against a schema specified in a GitHub repository.
# Usage: validate-data-package-json.sh [-r ref | -l local_schema_location] [-f datapackage_file]
#   -r ref: Optional. Specify the ref name of the GitHub repository. Default is 'main'.
#   -l local_schema_location: Optional. Specify the location of the local schema directory.
#   -f datapackage_file: Optional. Specify the location of the datapackage.json file. Default is 'datapackage.json' in the execution directory.

# Check if jsonschema-cli is installed
command -v jsonschema-cli >/dev/null 2>&1 || {
  echo >&2 "jsonschema-cli is required but not found. You can install it using 'pip install jsonschema-cli'. Aborting."
  exit 1
}

# Set default values
ref="main"
local_schema_location=""
datapackage_file="datapackage.json"

# Parse command-line arguments
while getopts ":r:l:f:" opt; do
  case $opt in
    r)
      ref=$OPTARG
      ;;
    l)
      local_schema_location=$OPTARG
      ;;
    f)
      datapackage_file=$OPTARG
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

echo "Validating data package file in $dataset_location"

# Set the temporary directory path
temp_dir=$(mktemp -d)

# Set the schema file path based on the option chosen
schema_file=""
if [ "$local_schema_location" != "" ]; then
  schema_file="$local_schema_location/tides-data-package.json"
else
  # Download the schema file to the temporary directory
  schema_url="https://raw.githubusercontent.com/TIDES-transit/TIDES/$ref/spec/tides-data-package.json"
  schema_file="$temp_dir/data-package.json"

  if curl -s --head "$schema_url/tides-data-package.json" >/dev/null; then
    echo "Schema file not found on GitHub for the specified TIDES version: $tides_version"
    exit 1
  fi
curl -o "$schema_file" "$schema_url"
fi

# Validate datapackage against the downloaded schema
jsonschema-cli validate "$schema_file" "$datapackage_file"

# Clean up the temporary directory
rm -rf "$temp_dir"
